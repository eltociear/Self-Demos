[
    "Query: I have a list of IP addresses and I need to retrieve the geolocation details for each of them. Can you show me how to use the `getGeolocationDetailsList` function?\n\nFunction Calls: [\"getGeolocationDetailsList(ip_addresses=['192.168.1.1', '10.0.0.1', '172.16.0.1'])\"]",
    "Query: I have a list of IP addresses and I need to retrieve the geolocation details for all of them using the `getGeolocationDetailsList` function.\nFunction Calls: [\"getGeolocationDetailsList(ip_addresses=['192.168.1.1', '10.0.0.1', '172.16.0.1'])\"]",
    "Query: I have a list of IP addresses that I need to retrieve geolocation details for. The IP addresses are [\"192.168.1.1\", \"10.0.0.1\", \"172.16.0.1\"]. Can you help me with that?\nFunction Calls: [\"getGeolocationDetailsList(ip_addresses=['192.168.1.1', '10.0.0.1', '172.16.0.1'])\"]",
    "Query: I have a list of IP addresses and I need to retrieve the geolocation details for each of them. Can you show me how to use the `getGeolocationDetailsList` function?\n\nFunction Calls: [\"getGeolocationDetailsList(ip_addresses=['192.168.1.1', '10.0.0.1', '172.16.0.1'])\"]",
    "Query: I want to verify the existence of the patent with the patent number \"TW202100345\". Please check if this patent exists in the database.\nFunction Calls: [\"searchPatents(patentNumber='TW202100345')\"]",
    "Query: I want to verify the existence of the patent with the patent number \"TW202100345\". Please search for this patent using the `searchPatents` function.\n\nFunction Calls: [\"searchPatents(patentNumber='TW202100345')\"]",
    "Query: I am trying to verify the existence of a patent with the patent number \"TW202100345\" in the Taiwan patent search system.\nFunction Calls: [\"searchPatents(patentNumber='TW202100345')\"]",
    "Query: I want to verify the existence of a specific patent with the patent number \"TW202100345\" in the Taiwan patent search system.\nFunction Calls: [\"searchPatents(patentNumber='TW202100345')\"]",
    "Query: Update the details of a user with ID \"123\" in the \"Users\" database. The new data for the user is {\"name\": \"John Doe\", \"email\": \"johndoe@example.com\", \"age\": 30}.\n\nFunction Calls: [\"updateData(database='Users', id='123', data={'name': 'John Doe', 'email': 'johndoe@example.com', 'age': 30})\"]",
    "Query: Update the details of a customer in the \"Customers\" database with the ID \"123\".\n\nFunction Calls: [\"updateData(database='Customers', id='123', data={'name': 'John Smith', 'email': 'johnsmith@example.com', 'phone': '123-456-7890'})\"]",
    "Query: Update the data of a book in the \"Books\" database with the ID \"123\" to {\"title\": \"Pride and Prejudice\", \"author\": \"Jane Austen\", \"year\": 1813}.\n\nFunction Calls: [\"updateData(database='Books', id='123', data={'title': 'Pride and Prejudice', 'author': 'Jane Austen', 'year': 1813})\"]",
    "Query: Update the details of a user in the \"Users\" database with the ID \"123\".\n\nFunction Calls: [\"updateData(database='Users', id='123', data={'name': 'John Doe', 'email': 'john.doe@example.com', 'age': 30})\"]",
    "Query: I want to create a custom alias for my shortened URL, but I'm not sure if the alias is available. Can you help me check its availability?\nFunction Calls: [\"checkAliasAvailability(alias='mycustomalias')\"]",
    "Query: I want to check if the custom alias \"myalias\" is available for use in the URL shortener service.\nFunction Calls: [\"checkAliasAvailability(alias='myalias')\"]",
    "Query: I want to check if the custom alias \"myalias\" is available for use.\nFunction Calls: [\"checkAliasAvailability(alias='myalias')\"]",
    "Query: I want to check if the custom alias \"myalias\" is available for use as a shortened URL.\nFunction Calls: [\"checkAliasAvailability(alias='myalias')\"]",
    "Query: I want to retrieve the historical price data for Bitcoin from January 1, 2021, to December 31, 2021. Can you show me how to use the CryptingUp API to get this information?\n\nFunction Calls: [\"getHistoricalPrices(cryptocurrency='Bitcoin', start_date='2021-01-01', end_date='2021-12-31')\"]",
    "Query: I want to retrieve the historical price data for Bitcoin from January 1, 2021, to January 31, 2021. Can you use the CryptingUp API to retrieve this information for me?\nFunction Calls: [\"getHistoricalPrices(cryptocurrency='Bitcoin', start_date='2021-01-01', end_date='2021-01-31')\"]",
    "Query: I want to retrieve the historical price data for Bitcoin from January 1, 2022, to January 31, 2022. Can you use the CryptingUp API to retrieve this information for me?\n\nFunction Calls: [\"getHistoricalPrices(cryptocurrency='Bitcoin', start_date='2022-01-01', end_date='2022-01-31')\"]",
    "Query: I want to retrieve historical price data for Bitcoin from January 1, 2021, to January 31, 2021. Can you use the CryptingUp API to retrieve this information for me?\nFunction Calls: [\"getHistoricalPrices(cryptocurrency='Bitcoin', start_date='2021-01-01', end_date='2021-01-31')\"]",
    "Query: I want to find anime art by searching for specific tags (cute, school uniform) and retrieve a list of matching works. Can you show me an example of how to use the `searchWorks` function?\n\nFunction Calls: [\"searchWorks(tags='cute school uniform')\"]",
    "Query: I want to find anime art with the tag \"neko\" and retrieve a list of matching works. Can you show me an array of work objects, each containing their ID, title, and artist information?\nFunction Calls: [\"searchWorks(tags='neko')\"]",
    "Query: I am looking for anime art that matches the tags \"fantasy\" and \"magical girl\". Can you help me find the works that have these tags?\nFunction Calls: [\"searchWorks(tags='fantasy magical girl')\"]",
    "Query: I want to find anime art that includes the tags \"fantasy\" and \"magic\". Can you show me a list of matching works, each containing their ID, title, and a brief description?\nFunction Calls: [\"searchWorks(tags='fantasy magic')\"]",
    "Query: I want to search for key liturgical events related to the resurrection in the Protestant liturgical calendar.\n\nFunction Calls: [\"searchEvents(searchType='keyword', searchValue='resurrection')\"]",
    "Query: I want to search for liturgical events related to Easter in the Protestant liturgical calendar.\nFunction Calls: [\"searchEvents(searchType='keyword', searchValue='Easter')\"]",
    "Query: I want to search for liturgical events related to Easter Sunday in the Protestant liturgical calendar.\nFunction Calls: [\"searchEvents(searchType='keyword', searchValue='Easter Sunday')\"]",
    "Query: I need to search for key liturgical events related to the Nativity of Jesus in the Protestant liturgical calendar.\nFunction Calls: [\"searchEvents(searchType='keyword', searchValue='Nativity of Jesus')\"]",
    "Query: I want to generate a random insult from the category \"Appearance\" with a custom response code \"APPEARANCE-INSULT\" and limit the insult to 10 words. Can you help me with that?\n\nFunction Calls: [\"generateInsultByCategory(category='Appearance', responseCode='APPEARANCE-INSULT', numWords=10)\"]",
    "Query: I want to generate a random insult from the \"Sports\" category with a custom response code \"SPORTS-INSULT\" and ensure that the insult contains only 10 words.\nFunction Calls: [\"generateInsultByCategory(category='Sports', responseCode='SPORTS-INSULT', numWords=10)\"]",
    "Query: I want to generate a random insult from the \"Technology\" category, with a custom response code \"FUNNY-TECH\" and a maximum of 10 words. Can you show me an example of how to use the `generateInsultByCategory` function for this?\n\nFunction Calls: [\"generateInsultByCategory(category='Technology', responseCode='FUNNY-TECH', numWords=10)\"]",
    "Query: I'm organizing a comedy show and I need some insults related to animals. Can you please provide me with a random insult from the \"animals\" category, with a custom response code \"COMEDY-SHOW\" and a maximum of 10 words?\n\nFunction Calls: [\"generateInsultByCategory(category='animals', responseCode='COMEDY-SHOW', numWords=10)\"]",
    "Query: Retrieve the historic aggregate data for Tesla Inc. (TSLA) from January 1st, 2022 to January 31st, 2022, with a 15-minute aggregation interval.\nFunction Calls: [\"getHistoricAggregates(symbol='TSLA', multiplier=15, timespan='minute', from='2022-01-01', to='2022-01-31')\"]",
    "Query: Retrieve historic aggregate data for Microsoft Corporation (MSFT) over a period of one month, aggregating by hourly bars, from January 1st, 2022 to January 31st, 2022.\nFunction Calls: [\"getHistoricAggregates(symbol='MSFT', multiplier=1, timespan='hour', from='2022-01-01', to='2022-01-31')\"]",
    "Query: Retrieve the historic aggregate data for Microsoft Corporation (MSFT) for the past month, aggregated over 1-hour bars.\nFunction Calls: [\"getHistoricAggregates(symbol='MSFT', multiplier=1, timespan='hour', from='2022-01-01', to='2022-01-31')\"]",
    "Query: Retrieve the historic aggregate data for Microsoft Corporation (MSFT) over a 5-day period, aggregated by hour, from January 1st, 2022 to January 5th, 2022.\n\nFunction Calls: [\"getHistoricAggregates(symbol='MSFT', multiplier=1, timespan='hour', from='2022-01-01', to='2022-01-05')\"]",
    "Query: I need to convert 100 US dollars to Euros. Can you help me with that?\n\nFunction Calls: [\"convertCurrency(from='USD', to='EUR', amount=100)\"]",
    "Query: I need to convert $100 USD to EUR. Can you help me with that?\n\nFunction Calls: [\"convertCurrency(from='USD', to='EUR', amount=100)\"]",
    "Query: I need to convert 100 US dollars to euros. Can you help me with that?\n\nFunction Calls: [\"convertCurrency(from='USD', to='EUR', amount=100)\"]",
    "Query: I need to convert 100 US dollars into euros. Can you help me with that?\n\nFunction Calls: [\"convertCurrency(from='USD', to='EUR', amount=100)\"]",
    "Query: I need to retrieve a list of subdomains for my company's domain, \"businesscorp.com\", in order to conduct a comprehensive security assessment.\nFunction Calls: [\"listSubdomains(domain='businesscorp.com', page=1, perPage=100)\"]",
    "Query: I need to retrieve a list of subdomains for my website \"blog.example.com\" in order to perform a security audit and ensure that all subdomains are accounted for.\nFunction Calls: [\"listSubdomains(domain='blog.example.com', page=1, perPage=10)\"]",
    "Query: I need to retrieve a list of subdomains for my organization's domain, \"mycompany.com\", and display 10 results per page.\nFunction Calls: [\"listSubdomains(domain='mycompany.com', page=1, perPage=10)\"]",
    "Query: I want to retrieve a list of subdomains for the domain \"blog.example.com\" for my SEO analysis.\nFunction Calls: [\"listSubdomains(domain='blog.example.com')\"]",
    "Query: I want to search for articles about climate change from news sources in English language only. Can you provide me with the relevant articles?\nFunction Calls: [\"getEverything(q='climate change', language='en')\"]",
    "Query: I want to search for recent articles about climate change from reputable news sources. Can you provide me with the function call to use the `getEverything` function?\n\nFunction Calls: [\"getEverything(q='climate change', sortBy='publishedAt')\"]",
    "Query: I want to search for articles about climate change from various news sources and blogs. Can you provide an example of how to use the `getEverything` function to retrieve these articles?\n\nFunction Calls: [\"getEverything(q='climate change')\"]",
    "Query: I want to search for articles about climate change from various news sources and blogs. Can you show me an example of how to use the `getEverything` function to retrieve these articles?\nFunction Calls: [\"getEverything(q='climate change')\"]",
    "Query: Can you retrieve all data sets related to education in Poland?\nFunction Calls: [\"getDatasetsByCategory(categoryId=2)\"]",
    "Query: I want to retrieve all data sets related to education in Poland.\nFunction Calls: [\"getDatasetsByCategory(categoryId=3)\"]",
    "Query: I want to retrieve all data sets belonging to the category of \"Education\" in Poland.\nFunction Calls: [\"getDatasetsByCategory(categoryId=123)\"]",
    "Query: Retrieve all data sets belonging to the category of \"Education\" in Poland.\nFunction Calls: ['getDatasetsByCategory(categoryId=123456)']",
    "Query: I am interested in finding data sets related to education in Sweden. How can I use the API to search for these statistics?\n\nFunction Calls: [\"searchStatistics(query='education')\"]",
    "Query: I am interested in finding data sets related to education in Sweden. Can you help me use the API to search for relevant statistics?\nFunction Calls: [\"searchStatistics(query='education')\"]",
    "Query: I need to find statistics on the economy of Sweden. Can you help me use the API to perform a search for data sets related to the economy?\n\nFunction Calls: [\"searchStatistics(query='economy')\"]",
    "Query: I am looking for data sets related to the education sector in Sweden. Can you help me perform a search query using the government open data API?\nFunction Calls: [\"searchStatistics(query='education')\"]",
    "Query: I'm interested in a specific Lichess tournament and want to retrieve detailed information about it. Can you show me how to use the `getTournamentInfo` function?\n\nFunction Calls: [\"getTournamentInfo(tournamentId='abcdefgh')\"]\n\nNote: Replace 'abcdefgh' with the actual unique identifier of the tournament you want to retrieve information about.",
    "Query: I want to get detailed information about a specific Lichess tournament. Can you show me an example of how to use the `getTournamentInfo` function?\nFunction Calls: [\"getTournamentInfo(tournamentId='abcdefg123456')\"]",
    "Query: I'm interested in a specific Lichess tournament and would like to retrieve detailed information about it. Can you show me an example of how to use the `getTournamentInfo` function?\n\nFunction Calls: [\"getTournamentInfo(tournamentId='ABC123')\"]",
    "Query: I want to know the detailed information about a specific Lichess tournament. Can you provide me with the tournament's information?\nFunction Calls: [\"getTournamentInfo(tournamentId='abc123')\"]",
    "Query: I want to analyze the Federal Reserve monetary operations during the financial crisis of 2008. Can you help me retrieve the data for the period from September 2008 to December 2009?\n\nFunction Calls: [\"getFederalReserveOperations(startDate='2008-09-01', endDate='2009-12-31')\"]",
    "Query: I want to analyze the Federal Reserve monetary operations during the COVID-19 pandemic. Can you help me retrieve the data for the year 2020?\nFunction Calls: [\"getFederalReserveOperations(startDate='2020-01-01', endDate='2020-12-31')\"]",
    "Query: I need to analyze the Federal Reserve monetary operations during the financial crisis of 2008. Can you help me retrieve the data for that period?\nFunction Calls: [\"getFederalReserveOperations(startDate='2008-01-01', endDate='2009-12-31')\"]",
    "Query: I need to analyze the Federal Reserve monetary operations from the beginning of the year until now. Can you show me the data for this period, including the start date, end date, and operation type?\n\nFunction Calls: [\"getFederalReserveOperations(startDate='2021-01-01', endDate='2021-12-31')\"]",
    "Query: I need to find routes from 'Bern' to 'Geneva' using the Swiss public transport system.\nFunction Calls: [\"searchRoutes(query='Bern to Geneva')\"]",
    "Query: I want to find the routes from 'Zurich' to 'Geneva' by bus.\nFunction Calls: [\"searchRoutes(query='Zurich to Geneva by bus', transport_mode='bus')\"]",
    "Query: I want to search for routes from Zurich to Geneva.\nFunction Calls: [\"searchRoutes(query='Zurich to Geneva')\"]",
    "Query: I am planning to travel from Geneva to Zurich by bus. Can you help me find the available routes?\n\nFunction Calls: [\"searchRoutes(query='Geneva to Zurich', transport_mode='bus')\"]",
    "Query: I want to see a random image of a Chihuahua.\nFunction Calls: [\"randomImage(breed='Chihuahua')\"]",
    "Query: I want to see a random image of a Labrador Retriever.\nFunction Calls: [\"randomImage(breed='Labrador Retriever')\"]",
    "Query: I want to see a random image of a Golden Retriever.\nFunction Calls: [\"randomImage(breed='Golden Retriever')\"]",
    "Query: I want to see a random image of a Labrador Retriever.\n\nFunction Calls: [\"randomImage(breed='Labrador Retriever')\"]",
    "Query: I am researching the administrative divisions of Canada (CA) and need to know the parent division of the province of Ontario (ON). Can you help me retrieve that information?\n\nFunction Calls: [\"getParentDivision(countryCode='CA', divisionCode='ON')\"]",
    "Query: I'm researching the administrative divisions of China (CN) and need to know the parent division of the city with the division code \"SHG\". Can you help me retrieve that information?\nFunction Calls: [\"getParentDivision(countryCode='CN', divisionCode='SHG')\"]",
    "Query: I'm researching the administrative divisions of Germany (DE) and I need to find the parent division of a specific administrative division. Can you help me retrieve that information?\n\nFunction Calls: [\"getParentDivision(countryCode='DE', divisionCode='DE-HH')\"]\n",
    "Query: I'm trying to find the parent administrative division of the city of Rio de Janeiro in Brazil (BR). Can you help me retrieve that information?\n\nFunction Calls: [\"getParentDivision(countryCode='BR', divisionCode='RJ')\"]",
    "Query: I want to generate a color scheme based on the input color \"teal\". Can you help me with that?\nFunction Calls: [\"generateColorScheme(hex='008080', schemeType='analogous')\"]",
    "Query: I am designing a new logo for my company and I want to generate a color scheme based on our brand color, which is #FF0000 (red). Can you help me with that?\n\nFunction Calls: [\"generateColorScheme(hex='#FF0000', schemeType='analogous')\"]\n\nExplanation: In this example, the user wants to generate a color scheme based on their brand color, which is represented by the hex code #FF0000 (red). They want to generate an analogous color scheme, which means the colors in the scheme will be similar to red and create a harmonious effect. By calling the `generateColorScheme` function with the parameters `hex='#FF0000'` and `schemeType='analogous'`, the API will generate a color scheme based on these specifications.",
    "Query: I want to generate a color scheme based on the color \"green\". Can you help me with that?\n\nFunction Calls: [\"generateColorScheme(hex='green', schemeType='analogous')\"]",
    "Query: I am designing a website and I want to generate a color scheme based on the main color \"#FFC0CB\" (pink). Can you help me with that?\n\nFunction Calls: [\"generateColorScheme(hex='#FFC0CB', schemeType='analogous')\"]",
    "Query: I have a list of URLs and I want to check if any of them are flagged as unsafe. The URLs are [\"www.example1.com\", \"www.example2.com\", \"www.example3.com\"].\nFunction Calls: [\"checkMultipleUrlsSafety(urls=['www.example1.com', 'www.example2.com', 'www.example3.com'])\"]",
    "Query: I have a list of URLs and I need to check if any of them are flagged as unsafe. The list of URLs is [\"www.example.com\", \"www.google.com\", \"www.facebook.com\"].\nFunction Calls: [\"checkMultipleUrlsSafety(urls=['www.example.com', 'www.google.com', 'www.facebook.com'])\"]",
    "Query: I have a list of URLs and I want to check if any of them are flagged as unsafe. The list of URLs is [\"www.example.com\", \"www.google.com\", \"www.facebook.com\"].\nFunction Calls: [\"checkMultipleUrlsSafety(urls=['www.example.com', 'www.google.com', 'www.facebook.com'])\"]",
    "Query: I have a list of URLs and I want to check if any of them are flagged as unsafe. The URLs are [\"www.example.com\", \"www.google.com\", \"www.facebook.com\"].\nFunction Calls: [\"checkMultipleUrlsSafety(urls=['www.example.com', 'www.google.com', 'www.facebook.com'])\"]"
]